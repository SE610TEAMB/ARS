package AGV_subsystems
public
with AGV_runtime;
	system mission_processing
	features
		radar_in : in data port;
		GPS_in : in data port;
		mission_data_amc : in data port;
		battery_in : in data port;
		mission_results_amc : out data port;
		vehicle_state_amc : out data port;
		motor_feedback : in data port;
		mission_data_arr : out data port;
		mission_results_arr : in data port;
		vehicle_state_arr : in data port;
		door_feedback : in data port;
		mission_control_amc : in event port;
		motor_signal : out event port;
		mission_control_arr : out event port;
		door_signal : out event port;
	end mission_processing;

	system implementation mission_processing.impl
	subcomponents
		motor_handler : process AGV_runtime::actuator_handler.motor;
		AGV_controller : process AGV_runtime::controller.impl;
		battery_handler : process AGV_runtime::sensor_handler.battery;
		GPS_handler : process AGV_runtime::sensor_handler.GPS;
		radar_handler : process AGV_runtime::sensor_handler.radar;
		AGV_CPU : processor;
		AGV_memory : memory;
		AGV_bus : bus;
		mission_decoder : process AGV_runtime::mission_decoder.impl;
		mission_encoder : process AGV_runtime::mission_encoder.impl;
		new_subcomponent : process AGV_runtime::result_encoder.impl;
		new_subcomponent2 : process AGV_runtime::result_decoder.impl;
		new_subcomponent3 : process AGV_runtime::actuator_handler.door;
	connections
		new_connection : port radar_in -> radar_handler.sensor_data;
		new_connection2 : port GPS_in -> GPS_handler.sensor_data;
		new_connection3 : port battery_in -> battery_handler.sensor_data;
		new_connection4 : port motor_feedback -> motor_handler.actuator_feedback;
		new_connection5 : port motor_handler.actuator_signal -> motor_signal;
		new_connection14 : port radar_handler.data_out -> AGV_controller.radar_in;
		new_connection15 : port GPS_handler.data_out -> AGV_controller.GPS_in;
		new_connection16 : port battery_handler.data_out -> AGV_controller.battery_in;
		new_connection17 : port AGV_controller.motor_out -> motor_handler.cmd;
		new_connection6 : port mission_data_amc -> mission_decoder.mission_data_in;
		new_connection7 : port mission_decoder.mission_data_out -> AGV_controller.mission_data_amc;
		new_connection8 : port mission_control_amc -> mission_decoder.mission_control_in;
	end mission_processing.impl;

end AGV_subsystems;