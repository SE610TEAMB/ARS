package ARR_subsystems
public
with ARR_runtime;
with ARR_processes;
with AGV_runtime;
	system mission_processing
	features
		camera_in : in data port;
		microphone_in : in data port;
		GPS_in : in data port;
		mission_data_agv : in data port;
		mission_results_agv : out data port;
		battery_in : in data port;
		vehicle_state_agv : out data port;
		motor_feedback : in data port;
		arm_feedback : in data port;
		radar_in : in data port;
		battery_backup : in data port;
		mission_control_agv : in event port;
		motor_signal : out event port;
		arm_singal : out event port;
	flows
		new_flow_spec : flow sink radar_in;
		new_flow_spec2 : flow sink motor_feedback;
		new_flow_spec3 : flow source arm_singal;
		new_flow_spec4 : flow source motor_signal;
		new_flow_spec5 : flow sink arm_feedback;
		new_flow_spec6 : flow sink mission_control_agv;
		new_flow_spec7 : flow sink mission_data_agv;
		new_flow_spec8 : flow source mission_results_agv;
		new_flow_spec9 : flow source vehicle_state_agv;
		new_flow_spec10 : flow sink GPS_in;
		new_flow_spec11 : flow sink camera_in;
		new_flow_spec12 : flow sink microphone_in;
		new_flow_spec13 : flow sink battery_in;
	end mission_processing;

	system implementation mission_processing.old
	subcomponents
		ARR_controller : process ARR_runtime::controller.impl;
		battery : process ARR_runtime::sensor_handler.battery;
		camera : process ARR_runtime::sensor_handler.camera;
		GPS : process ARR_runtime::sensor_handler.GPS;
		microphone : process ARR_runtime::sensor_handler.microphone;
		ARR_CPU : processor;
		ARR_H264_encoder : processor;
		ARR_memory : memory;
		ARR_bus : bus;
		motor : process ARR_runtime::actuator_handler.motor;
		arm : process ARR_runtime::actuator_handler.arm;
		result_encoder : process ARR_runtime::result_encoder.impl;
		mission_decoder : process ARR_runtime::mission_decoder.impl;
		radar : process ARR_runtime::sensor_handler.radar;
	connections
		new_connection5 : port battery_in -> battery.sensor_data;
		new_connection6 : port camera_in -> camera.sensor_data;
		new_connection7 : port GPS_in -> GPS.sensor_data;
		new_connection8 : port microphone_in -> microphone.sensor_data;
		new_connection9 : port battery.data_out -> ARR_controller.battery_in;
		new_connection10 : port camera.data_out -> ARR_controller.camera_in;
		new_connection11 : port GPS.data_out -> ARR_controller.GPS_in;
		new_connection12 : port microphone.data_out -> ARR_controller.microphone_in;
		new_connection : port mission_control_agv -> mission_decoder.mission_control_in;
		new_connection2 : port mission_data_agv -> mission_decoder.mission_data_in;
		new_connection3 : port result_encoder.mission_results -> mission_results_agv;
		new_connection4 : port result_encoder.vehicle_state -> vehicle_state_agv;
		new_connection13 : port ARR_controller.results_agv -> result_encoder.results;
		new_connection14 : port mission_decoder.mission_control_out -> ARR_controller.mission_cotrol_agv;
		new_connection15 : port mission_decoder.mission_data_out -> ARR_controller.mission_data_agv;
		new_connection16 : port radar.data_out -> ARR_controller.radar_in;
		new_connection17 : port ARR_controller.motor_single -> motor.cmd;
		new_connection18 : port motor.feedback -> ARR_controller.motor_feedback;
		new_connection19 : port ARR_controller.arm_signal -> arm.cmd;
		new_connection20 : port arm.feedback -> ARR_controller.arm_feedback;
		new_connection21 : port radar_in -> radar.sensor_data;
		new_connection22 : port motor.actuator_signal -> motor_signal;
		new_connection23 : port motor_feedback -> motor.actuator_feedback;
		new_connection24 : port arm.actuator_signal -> arm_singal;
		new_connection25 : port arm_feedback -> arm.actuator_feedback;
	end mission_processing.old;

	system implementation mission_processing.impl
	subcomponents
		mission_controller : process ARR_processes::mission_controller.impl;
		battery_handler : process ARR_processes::battery_handler.impl;
		media_handler : process ARR_processes::media_handler.impl;
		GPS_handler : process ARR_processes::sensor_handler.GPS;
		navigation : process ARR_processes::navigation.impl;
		ARR_CPU : processor;
		ARR_H264_encoder : processor;
		ARR_memory : memory;
		ARR_bus : bus;
		motor_handler : process ARR_processes::actuator_handler.motor;
		arm_handler : process ARR_processes::actuator_handler.arm;
		mission_result_handler : process ARR_processes::mission_result_handler.impl;
		target_identification : process ARR_processes::target_identification.impl;
		radar_handler : process ARR_runtime::sensor_handler.radar;
	mission_handler : process ARR_processes::mission_handler.impl;
	target_operation : process ARR_processes::target_operation.impl;
	system_controller : process ARR_processes::system_controller.impl;
	state_result_handler : process ARR_processes::state_result_handler.impl;
	disk_handler : process ARR_processes::disk_handler.impl;
	connections
		new_connection : port radar_in -> radar_handler.sensor_data;
		new_connection2 : port GPS_in -> GPS_handler.sensor_data;
		new_connection3 : port battery_in -> battery_handler.main_in;
		new_connection4 : port battery_backup -> battery_handler.backup_in;
		new_connection5 : port mission_data_agv -> mission_handler.mission_data_in;
		new_connection6 : port mission_control_agv -> mission_handler.mission_control_in;
		new_connection7 : port camera_in -> media_handler.vedio_in;
		new_connection8 : port microphone_in -> media_handler.audio_in;
		new_connection9 : port radar_handler.data_out -> navigation.radar_in;
		new_connection10 : port GPS_handler.data_out -> navigation.GPS_in;
		new_connection11 : port mission_handler.mission_data_out -> navigation.mission_position;
		new_connection12 : port battery_handler.info_out -> system_controller.battery_in;
		new_connection13 : port GPS_handler.data_out -> system_controller.GPS_in;
		new_connection14 : port mission_handler.mission_control_out -> mission_controller.mission_cotrol_agv;
		new_connection15 : port mission_handler.mission_data_out -> mission_controller.mission_data_agv;
		new_connection16 : port mission_handler.mission_data_out -> target_identification.mission_in;
	end mission_processing.impl;

end ARR_subsystems;